@model APIConsume.Models.Pagination

<div class="container">
    <nav aria-label="...">
        @if (Model.TotalPages > 0)
        {
            <ul class="pagination justify-content-end">
                @if (Model.CurrentPage > Model.StartPage)
                {
                    <li class="page-item">
                        <a class="page-link" asp-controller="Home" asp-action="Get" asp-route-pg="1">
                            First
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" asp-controller="Home" asp-action="Get" asp-route-pg="@(Model.CurrentPage - 1)">
                            Previous
                        </a>
                    </li>
                }

                @for (var pg = Model.StartPage; pg <= Model.EndPage; pg++)
                {
                    <li class="page-item @(pg == Model.CurrentPage ? "active":"")">
                        <a class="page-link" asp-controller="Home" asp-action="Get" asp-route-pg="@pg" asp-route-pageSize="10">@pg</a>
                    </li>
                }

                @if (Model.CurrentPage < Model.TotalPages)
                {
                    <li class="page-item">
                        <a class="page-link" asp-controller="Home" asp-action="Get" asp-route-pg="@(Model.CurrentPage + 1)">
                            Next
                        </a>
                    </li>
                    <li class="page-item">
                        <a class="page-link" asp-controller="Home" asp-action="Get" asp-route-pg="@(Model.TotalPages)">
                            Last
                        </a>
                    </li>
                }
            </ul>
        }
    </nav>
</div>