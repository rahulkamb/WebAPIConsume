@model List<APIConsume.ViewModel.EmployeeVM>

@{
    ViewData["Title"] = "Get";
}


<head>
    <link href="~/css/site.css" rel="stylesheet" />
</head>
<body>
    <h1>Employee List</h1>
    <p>
        <button class="btn btn-info">
            <a asp-action="CreateEmployee" style="color:black" class="text-decoration-none">Create New</a>
        </button>
    </p>
    <table class="table">
        <thead>
            <tr>
                <th>
                    First Name
                </th>
                <th>
                    Last Name
                </th>
                <th>
                    Email Id
                </th>
                <th>
                    Username
                </th>
                <th>
                    Password
                </th>
                <th></th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.FirstName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.LastName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EmailId)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.UserName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Password)
                    </td>
                    <td>
                        @Html.ActionLink("Edit", "Update", new {  id=item.Id  }) |
                        @Html.ActionLink("Details", "Details", new { id=item.Id}) |
                        @Html.ActionLink("Delete", "Delete", new {  id=item.Id })
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <!-- Pagination Controls -->
   @*  <div class="pagination">
        @if (Model)
        {
            <a href="@Url.Action("Get", new { page = Model.PageNumber - 1 })">Previous</a>
        }

        @for (int i = 1; i <= Model.TotalPages; i++)
        {
            <a href="@Url.Action("Get", new { page = i })"
               class="@(i == Model.PageNumber ? "active" : "")">@i</a>
        }

        @if (Model.HasNextPage)
        {
            <a href="@Url.Action("Get", new { page = Model.PageNumber + 1 })">Next</a>
        }
    </div> *@
</body>
